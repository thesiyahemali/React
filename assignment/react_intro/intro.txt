Q-1: What is React Js?
ANS: ReactJS, also known as React, is a popular JavaScript library for building user interfaces. It is also referred to as a
front-end JavaScript library.

Q-2:What is NPM in React Js?
ANS: The name npm (Node Package Manager). It is a package manager for JavaScript. It is the
default package manager that comes with NodeJS when you install it.

Q-3: What is Role of Node Js in react Js?
ANS: Using Node. js and React together empowers web applications to handle heavy server loads and requests. Therefore, it
allows you to work easily throughout the development process.

Q-4 : What is CLI command In React Js?
ANS: React has its own command-line interface (CLI) commands. However, these CLI commands are currently only used to create a
passable version of a react application using the command line.

Q-5: What is Components in React Js?
ANS: Components are independent and reusable bits of code.

Q-6 What is Header and Content Components in React Js?
ANS: The Header is an important element of a website's design. It's the first impression of the website. A header is a section at the top of a page that displays site name and navigation.
► Components are independent and reusable bits of code. They

Q-7 How to install React Js on Windows, linux Operating System? How
to install NPM and How to check version of NPM?

ANS: Step 1: Install Node.js installer for windows.
→ check whether it is completely installed or not:
node -v

→ Now in the terminal run the below command:
npm install -g create-react-app

→ check everything went well run the command:
create-react-app --version

→ Create a new folder where you want to make your react app using the below command:
mkdir newfolder


→ Move inside the same folder using the below command:
cd newfolder (your folder name)

→ Now inside this folder run the command:
create-react-app reactfirst YOUR_APP_NAME

→ To start your app run the below command :
npm start

Q-8: How to check version of React Js?
ANS: npm view react version

Q-9 How to change in components of React Js?
ANS: this.setState({ stateName : new-state-value})
this.setState(st => {
st.stateName = new-state-value
})